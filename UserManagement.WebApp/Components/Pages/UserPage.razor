@page "/user/{id:long}"
@using UserManagement.WebApp.Models
@attribute [StreamRendering]

@if (auditLogs == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ul class="list-group">
		@foreach (var item in auditLogs)
        {           
            <li class="list-group-item">
                <div>
					<strong>Logd:</strong> @item.Id
                    <strong>Entity Id:</strong> @item.EntityId |
                    <strong>Action:</strong> @item.Action |
                    <strong>Entity Name:</strong> @item.EntityName
				<button class="btn btn-link btn-sm ms-2" @onclick="() => ToggleDetails(item.Id)">
						@(selectedId == item.Id ? "Hide Details" : "View Details")
                    </button>
                </div>
				@if (selectedId == item.Id)
                {
                    <div class="mt-2 ms-3">
                        <div><strong>Details:</strong> @item.Details</div>
                        <div><strong>Timestamp:</strong> @item.Timestamp</div>
                    </div>
                }
            </li>
        }
    </ul>
}

@inject HttpClient Http

@code {
    [Parameter]
    public long Id { get; set; }
    private UserModel? user;
    private AuditLogs[]? auditLogs;
    private long? selectedId = null;

    protected override async Task OnInitializedAsync()
    {
        user = await Http.GetFromJsonAsync<UserModel>($"users/GetById/{Id}");
        auditLogs = await Http.GetFromJsonAsync<AuditLogs[]>($"logs/GetByEntity/user/{Id}");
    }

    private void ToggleDetails(long Id)
    {
		if (selectedId == Id)
			selectedId = null;
        else
			selectedId = Id;
    }
}
